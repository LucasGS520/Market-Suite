"""add modelos de alertas e notificações

Revision ID: 96fe3b479acc
Revises: 3d0ff350638e
Create Date: 2025-07-02 16:26:07.445120

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96fe3b479acc'
down_revision: Union[str, None] = '3d0ff350638e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('monitored_product_id', sa.UUID(), nullable=True),
    sa.Column('rule_type', sa.Enum('PRICE_TARGET', 'PRICE_CHANGE', 'LISTING_PAUSED', 'LISTING_REMOVED', 'SCRAPING_ERROR', 'SCRAPING_BLOCKED', 'SCRAPING_SUSPENDED', 'CIRCUIT_BREAKER_OPEN', 'CACHE_MISS_RATE_HIGH', 'SYSTEM_ERROR', name='alert_rule_type_enum'), nullable=False),
    sa.Column('threshold_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('threshold_percent', sa.Float(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['monitored_product_id'], ['monitored_products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_rules_monitored_product_id'), 'alert_rules', ['monitored_product_id'], unique=False)
    op.create_index(op.f('ix_alert_rules_user_id'), 'alert_rules', ['user_id'], unique=False)
    op.create_table('notification_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('alert_rule_id', sa.UUID(), nullable=True),
    sa.Column('channel', sa.Enum('EMAIL', 'SMS', 'PUSH', 'WHATSAPP', 'WEBHOOK', name='notification_channel_enum'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['alert_rule_id'], ['alert_rules.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_logs_alert_rule_id'), 'notification_logs', ['alert_rule_id'], unique=False)
    op.create_index(op.f('ix_notification_logs_user_id'), 'notification_logs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notification_logs_user_id'), table_name='notification_logs')
    op.drop_index(op.f('ix_notification_logs_alert_rule_id'), table_name='notification_logs')
    op.drop_table('notification_logs')
    op.drop_index(op.f('ix_alert_rules_user_id'), table_name='alert_rules')
    op.drop_index(op.f('ix_alert_rules_monitored_product_id'), table_name='alert_rules')
    op.drop_table('alert_rules')
    # ### end Alembic commands ###
