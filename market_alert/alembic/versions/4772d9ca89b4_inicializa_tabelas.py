"""inicializa tabelas

Revision ID: 4772d9ca89b4
Revises: 
Create Date: 2025-05-12 13:40:24.635128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4772d9ca89b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_attempts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_login_attempts_email'), 'login_attempts', ['email'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=70), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('failed_attempts', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_reset_token'), 'users', ['reset_token'], unique=False)
    op.create_table('monitored_products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('monitoring_type', sa.Enum('api', 'scraping', name='monitoring_type_enum'), nullable=False),
    sa.Column('search_query', sa.String(), nullable=False),
    sa.Column('product_url', sa.Text(), nullable=False),
    sa.Column('target_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('current_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('free_shipping', sa.Boolean(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', 'failed', name='monitored_status_enum'), nullable=False),
    sa.Column('last_checked', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'product_url', name='uq_user_product_url')
    )
    op.create_index(op.f('ix_monitored_products_search_query'), 'monitored_products', ['search_query'], unique=False)
    op.create_index(op.f('ix_monitored_products_user_id'), 'monitored_products', ['user_id'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('user_agent', sa.String(length=512), nullable=False),
    sa.Column('hashed_token', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_hashed_token'), 'refresh_tokens', ['hashed_token'], unique=True)
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_table('competitor_products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('monitored_product_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('product_url', sa.Text(), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('old_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('free_shipping', sa.Boolean(), nullable=True),
    sa.Column('seller', sa.String(), nullable=True),
    sa.Column('seller_rating', sa.Float(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('available', 'unavailable', 'removed', name='product_status_enum'), nullable=False),
    sa.Column('last_checked', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['monitored_product_id'], ['monitored_products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monitored_product_id', 'product_url', name='uq_competitor_url')
    )
    op.create_index(op.f('ix_competitor_products_monitored_product_id'), 'competitor_products', ['monitored_product_id'], unique=False)
    op.create_table('scraping_errors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('error_type', sa.Enum('http_error', 'missing_data', 'timeout', 'parsing_error', name='scraping_error_type_enum'), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['monitored_products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scraping_errors_product_id'), 'scraping_errors', ['product_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scraping_errors_product_id'), table_name='scraping_errors')
    op.drop_table('scraping_errors')
    op.drop_index(op.f('ix_competitor_products_monitored_product_id'), table_name='competitor_products')
    op.drop_table('competitor_products')
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_hashed_token'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_monitored_products_user_id'), table_name='monitored_products')
    op.drop_index(op.f('ix_monitored_products_search_query'), table_name='monitored_products')
    op.drop_table('monitored_products')
    op.drop_index(op.f('ix_users_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_login_attempts_email'), table_name='login_attempts')
    op.drop_table('login_attempts')
    # ### end Alembic commands ###
